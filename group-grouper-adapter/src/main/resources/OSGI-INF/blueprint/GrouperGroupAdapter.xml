<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
    xmlns:cm="http://aries.apache.org/blueprint/xmlns/blueprint-cm/v1.0.0"
    xmlns:cxf="http://camel.apache.org/schema/blueprint/cxf"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd">

    <cm:property-placeholder persistent-id="se.sunet.ati.integration.common" placeholder-prefix="$(" placeholder-suffix=")">
        <cm:default-properties>
            <cm:property name="amq.url"  value="tcp://localhost:61617" />
            <cm:property name="amq.user" value="smx" />
            <cm:property name="amq.pw"   value="smx" />
        </cm:default-properties>
    </cm:property-placeholder>

    <cm:property-placeholder persistent-id="se.uu.its.integration">
        <cm:default-properties>
            <cm:property name="grouper.rest.host" value="https://grouper-utv.its.uu.se"/>
            <cm:property name="grouper.rest.user" value="GROUPER_USER"/>
            <cm:property name="grouper.rest.pw"   value="GROUPER_PASSWORD"/>
        </cm:default-properties>
    </cm:property-placeholder>

    <!-- Used for testing: <throwException ref="forced" />
    <bean id="forced" class="java.lang.RuntimeException" />
    -->

    <bean id="jmsTransactionManager"
        class="org.springframework.jms.connection.JmsTransactionManager">
        <property name="connectionFactory" ref="jmsConnectionFactory" />
    </bean>

    <bean id="jmsConnectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
        <property name="brokerURL" value="$(amq.url)" />
        <property name="userName" value="$(amq.user)" />
        <property name="password" value="$(amq.pw)" />
    </bean>

    <bean id="amq" class="org.apache.activemq.camel.component.ActiveMQComponent">
        <property name="connectionFactory" ref="jmsConnectionFactory" />
        <property name="transacted" value="true" />
    </bean>

    <bean id="required" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
        <property name="transactionManager" ref="jmsTransactionManager"/>
        <property name="propagationBehaviorName" value="PROPAGATION_REQUIRED"/>
    </bean>

    <cxf:rsClient id="rsClient"
        address="${grouper.rest.host}/grouper-ws/servicesRest/v2_2_000"
        serviceClass="se.uu.its.integration.grouper.group.GrouperProxy"
		username="${grouper.rest.user}"
        password="${grouper.rest.pw}"
        loggingFeatureEnabled="true"/>

    <camelContext id="GrouperGroupAdapter"
                  trace="false"
                  xmlns="http://camel.apache.org/schema/blueprint"
                  xmlns:uuie="http://www.uu.se/schemas/integration/2015/Events"
                  xmlns:uuig="http://www.uu.se/schemas/integration/2015/Group">

        <onException>
            <exception>java.lang.Exception</exception>
            <redeliveryPolicy maximumRedeliveries="0" redeliveryDelay="5000" logStackTrace="true"/> <!-- Todo: maximumRedeliveries=-1 -->
        </onException>

        <route id="GrouperGroupAdapterRoute" >

			<description>This route pushes group messages to Grouper.</description>

            <from id="Retrieves messages from Grouper outgoing queue" uri="amq:queue:group-grouper" />

            <transacted ref="required"/>

            <choice>
                <when>
                    <xpath>/uuie:GroupEvent and uuie:GroupEvent/@type = 'GroupCreateRequestEvent'</xpath>

                    <!-- Message identifier extracted form message and put in header. -->
                    <setHeader headerName="MessageId">
                        <xpath resultType="java.lang.String">concat(/*/uuie:Producer/text(), "/" , /*/uuie:ProducerReferenceId/text())</xpath>
                    </setHeader>

                    <log message="Grouper adapter processing message $simple{header.MessageId}" loggingLevel="DEBUG" logName="se.uu.its.integration.grouper.group"/>

		    		<to id="Transforming into ESB internal format" uri="xslt:se/uu/its/integration/model/transform/groupCreateRequestEventToGouperCreateXmlPayload.xsl"/>

				    <setHeader headerName="Content-Type">
				        <constant>text/xml; charset=UTF-8</constant>
				    </setHeader>

				    <setHeader headerName="CamelHttpPath">
				        <constant>/groups</constant>
				    </setHeader>

                    <to id="Pushing request to Grouper" uri="cxfrs://bean://rsClient" />
                </when>
                <when>
                    <xpath>/uuie:GroupEvent and uuie:GroupEvent/@type = 'GroupMembershipCreateRequestEvent'</xpath>

                    <!-- Message identifier extracted form message and put in header. -->
                    <setHeader headerName="MessageId">
                        <xpath resultType="java.lang.String">concat(/*/uuie:Producer/text(), "/" , /*/uuie:ProducerReferenceId/text())</xpath>
                    </setHeader>

                    <log message="Grouper adapter processing message $simple{header.MessageId}" loggingLevel="DEBUG" logName="se.uu.its.integration.grouper.group"/>

		    		<to id="Transforming into ESB internal format" uri="xslt:se/uu/its/integration/model/transform/groupMembershipCreateRequestEventToGouperCreateXmlPayload.xsl"/>

				    <setHeader headerName="Content-Type">
				        <constant>text/xml; charset=UTF-8</constant>
				    </setHeader>

				    <setHeader headerName="CamelHttpPath">
				        <constant>/groups</constant>
				    </setHeader>

                    <to id="Pushing request to Grouper" uri="cxfrs://bean://rsClient" />
                </when>
                <otherwise>
                    <to uri="amq:queue:grouper-unknown-events?transacted=true" />
                </otherwise>
            </choice>

        </route>
    </camelContext>

</blueprint>
